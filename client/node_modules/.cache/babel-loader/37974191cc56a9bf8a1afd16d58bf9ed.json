{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\91876\\\\Desktop\\\\RealTimechat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nconst socket = io('http://localhost:5000');\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]); //const ENDPOINT = 'http://localhost:5000';\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); //socket = io(ENDPOINT);\n    //console.log(location.search);\n    //console.log(data);\n\n    setName(name);\n    setRoom(room); //console.log(socket)\n\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"V/zz/NCS5CF8FNR9V0MXcWNSfdM=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/91876/Desktop/RealTimechat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","parse","search","emit","off","ENDPOINT","on","sendMessage","event","preventDefault","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,MAAM,GAACH,EAAE,CAAC,uBAAD,CAAf;;AAEA,MAAMI,IAAI,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAkB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeV,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAeZ,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACa,OAAD,EAASC,UAAT,IAAuBd,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACe,QAAD,EAAUC,WAAV,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC,CAJ2B,CAK3B;;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM;AAACQ,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcT,WAAW,CAACe,KAAZ,CAAkBT,QAAQ,CAACU,MAA3B,CAApB,CADU,CAGV;AAEA;AACA;;AACAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CARU,CAUV;;AACAL,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAmB;AAACV,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAA+B,MAAI,CAElC,CAFD;AAIA,WAAO,MAAI;AACPL,MAAAA,MAAM,CAACa,IAAP,CAAY,YAAZ;AAEAb,MAAAA,MAAM,CAACc,GAAP;AACH,KAJD;AAKH,GApBQ,EAoBN,CAACC,QAAD,EAAUb,QAAQ,CAACU,MAAnB,CApBM,CAAT;AAsBAjB,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqBT,OAAD,IAAW;AAC3BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT,CA7B2B,CAmC3B;;AAEA,QAAMQ,WAAW,GAAIC,KAAD,IAAS;AACzBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGZ,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ,EAA0BN,OAA1B,EAAkC,MAAKC,UAAU,CAAC,EAAD,CAAjD;AACH;AACJ,GALD;;AAOAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAoBE,QAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEE,OAAhB;AAAyB,QAAA,UAAU,EAAEC,UAArC;AAAiD,QAAA,WAAW,EAAES;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtDD;;GAAMhB,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\n\r\nconst socket=io('http://localhost:5000');\r\n\r\nconst Chat = ( {location} ) => {\r\n    const [name,setName]=useState('');\r\n    const [room,setRoom]=useState('');\r\n    const [message,setMessage] = useState('');\r\n    const [messages,setMessages] = useState([]);\r\n    //const ENDPOINT = 'http://localhost:5000';\r\n\r\n    useEffect(()=>{\r\n        const {name,room} = queryString.parse(location.search);\r\n\r\n        //socket = io(ENDPOINT);\r\n        \r\n        //console.log(location.search);\r\n        //console.log(data);\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        //console.log(socket)\r\n        socket.emit('join',{name,room},()=>{\r\n            \r\n        });\r\n\r\n        return ()=>{\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n        } \r\n    }, [ENDPOINT,location.search]);\r\n\r\n    useEffect(()=>{\r\n        socket.on('message',(message)=>{\r\n            setMessages([...messages,message]);\r\n        })\r\n    },[messages]);\r\n\r\n    //function for sending messages\r\n\r\n    const sendMessage = (event)=>{\r\n        event.preventDefault();\r\n        if(message){\r\n            socket.emit('sendMessage',message,()=> setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message,messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room}/>\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\91876\\\\Desktop\\\\RealTimechat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InforBar from '../InfoBar/InfoBar';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT); //console.log(location.search);\n    //console.log(data);\n\n    setName(name);\n    setRoom(room); //console.log(socket)\n\n    socket.emit('join', {\n      name,\n      room\n    }, ({\n      error\n    }) => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \"/*\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        onKeyPress: event => event.key === ' Enter' ? sendMessage(event) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), \"*/\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"V/zz/NCS5CF8FNR9V0MXcWNSfdM=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/91876/Desktop/RealTimechat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InforBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAkB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACc,QAAD,EAAUC,WAAV,IAAyBf,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMgB,QAAQ,GAAG,gBAAjB;AAEAf,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM;AAACO,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcR,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB;AAEAb,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX,CAHU,CAIV;AACA;;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CAPU,CASV;;AACAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAA+B,CAAC;AAACU,MAAAA;AAAD,KAAD,KAAW,CAEzC,CAFD;AAIA,WAAO,MAAI;AACPf,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACgB,GAAP;AACH,KAJD;AAKH,GAnBQ,EAmBN,CAACL,QAAD,EAAUT,QAAQ,CAACW,MAAnB,CAnBM,CAAT;AAqBAjB,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,MAAM,CAACiB,EAAP,CAAU,SAAV,EAAqBV,OAAD,IAAW;AAC3BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT,CA5B2B,CAkC3B;;AAEA,QAAMS,WAAW,GAAIC,KAAD,IAAS;AACzBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGb,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAkC,MAAKC,UAAU,CAAC,EAAD,CAAjD;AACH;AACJ,GALD;;AAOAa,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ,EAAoBE,QAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,qBAGQ;AACA,QAAA,KAAK,EAAEE,OADP;AAEA,QAAA,QAAQ,EAAGY,KAAD,IAAWX,UAAU,CAACW,KAAK,CAACI,MAAN,CAAaC,KAAd,CAF/B;AAGA,QAAA,UAAU,EAAGL,KAAD,IAAUA,KAAK,CAACM,GAAN,KAAa,QAAb,GAAwBP,WAAW,CAACC,KAAD,CAAnC,GAA2C;AAHjE;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA1DD;;GAAMlB,I;;KAAAA,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport './Chat.css';\r\nimport InforBar from '../InfoBar/InfoBar';\r\n\r\nlet socket;\r\n\r\nconst Chat = ( {location} ) => {\r\n    const [name,setName]=useState('');\r\n    const [room,setRoom]=useState('');\r\n    const [message,setMessage] = useState('');\r\n    const [messages,setMessages] = useState([]);\r\n    const ENDPOINT = 'localhost:5000';\r\n\r\n    useEffect(()=>{\r\n        const {name,room} = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n        //console.log(location.search);\r\n        //console.log(data);\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        //console.log(socket)\r\n        socket.emit('join',{name,room},({error})=>{\r\n            \r\n        });\r\n\r\n        return ()=>{\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n        } \r\n    }, [ENDPOINT,location.search]);\r\n\r\n    useEffect(()=>{\r\n        socket.on('message',(message)=>{\r\n            setMessages([...messages,message]);\r\n        })\r\n    },[messages]);\r\n\r\n    //function for sending messages\r\n\r\n    const sendMessage = (event)=>{\r\n        event.preventDefault();\r\n        if(message){\r\n            socket.emit('sendMessage',message,()=> setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message,messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room}/>\r\n                /*\r\n                    <input \r\n                    value={message} \r\n                    onChange={(event) => setMessage(event.target.value)}\r\n                    onKeyPress={(event)=> event.key ===' Enter' ? sendMessage(event):null} \r\n                />*/\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}